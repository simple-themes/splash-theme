// This highlight code is based off of @barryclark's Jekyll Now theme.
pre.highlight {
    overflow-x: scroll;
}
code.highlighter-rouge, pre {
    background-color: #eeeeee;
}
.highlight .c { color: olivedrab } /* Comment */
.highlight .err { color: white; background-color: red } /* Error */
.highlight .g { color: black } /* Generic */
.highlight .k { color: blue } /* Keyword */
.highlight .l { color: orange } /* Literal */
.highlight .n { color: grey } /* Name */
.highlight .o { color: green } /* Operator */
.highlight .x { color: lightblue } /* Other */
.highlight .p { color: black } /* Punctuation */
.highlight .cm { color: olivedrab } /* Comment.Multiline */
.highlight .cp { color: olivedrab } /* Comment.Preproc */
.highlight .c1 { color: olivedrab } /* Comment.Single */
.highlight .cs { color: darkgreen } /* Comment.Special */
.highlight .gd { color: red } /* Generic.Deleted */
.highlight .ge { color: orange; font-style: italic } /* Generic.Emph */
.highlight .gr { color: red; background-color: red } /* Generic.Error */
.highlight .gh { color: black; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: darkseagreen } /* Generic.Inserted */
.highlight .go { color: royalblue } /* Generic.Output */
.highlight .gp { color: mediumvioletred } /* Generic.Prompt */
.highlight .gs { color: darkgrey; font-weight: bold } /* Generic.Strong */
.highlight .gu { color: grey } /* Generic.Subheading */
.highlight .gt { color: orange } /* Generic.Traceback */
.highlight .kc { color: blue } /* Keyword.Constant */
.highlight .kd { color: saddlebrown } /* Keyword.Declaration */
.highlight .kn { color: green } /* Keyword.Namespace */
.highlight .kp { color: orange } /* Keyword.Pseudo */
.highlight .kr { color: blue } /* Keyword.Reserved */
.highlight .kt { color: lightskyblue } /* Keyword.Type */
.highlight .ld { color: orange } /* Literal.Date */
.highlight .m { color: deeppink } /* Literal.Number */
.highlight .s { color: lightseagreen } /* Literal.String */
.highlight .na { color: saddlebrown } /* Name.Attribute */
.highlight .nb { color: goldenrod } /* Name.Builtin */
.highlight .nc { color: darkturquoise } /* Name.Class */
.highlight .no { color: magenta } /* Name.Constant */
.highlight .nd { color: orange } /* Name.Decorator */
.highlight .ni { color: lightskyblue } /* Name.Entity */
.highlight .ne { color: hotpink } /* Name.Exception */
.highlight .nf { color: saddlebrown } /* Name.Function */
.highlight .nl { color: goldenrod } /* Name.Label */
.highlight .nn { color: green } /* Name.Namespace */
.highlight .nx { color: lightblue } /* Name.Other */
.highlight .py { color: darkgrey } /* Name.Property */
.highlight .nt { color: darkgrey } /* Name.Tag */
.highlight .nv { color: magenta } /* Name.Variable */
.highlight .ow { color: green } /* Operator.Word */
.highlight .w { color: black } /* Text.Whitespace */
.highlight .mf { color: red } /* Literal.Number.Float */
.highlight .mh { color: red } /* Literal.Number.Hex */
.highlight .mi { color: red } /* Literal.Number.Integer */
.highlight .mo { color: red } /* Literal.Number.Oct */
.highlight .sb { color: lightseagreen } /* Literal.String.Backtick */
.highlight .sc { color: lightseagreen } /* Literal.String.Char */
.highlight .sd { color: lightseagreen } /* Literal.String.Doc */
.highlight .s2 { color: lightseagreen } /* Literal.String.Double */
.highlight .se { color: lightseagreen } /* Literal.String.Escape */
.highlight .sh { color: lightseagreen } /* Literal.String.Heredoc */
.highlight .si { color: lightseagreen } /* Literal.String.Interpol */
.highlight .sx { color: grey } /* Literal.String.Other */
.highlight .sr { color: yellow } /* Literal.String.Regex */
.highlight .s1 { color: lime } /* Literal.String.Single */
.highlight .ss { color: yellow } /* Literal.String.Symbol */
.highlight .bp { color: orange } /* Name.Builtin.Pseudo */
.highlight .vc { color: magenta } /* Name.Variable.Class */
.highlight .vg { color: magenta } /* Name.Variable.Global */
.highlight .vi { color: magenta } /* Name.Variable.Instance */
.highlight .il { color: red } /* Literal.Number.Integer.Long */
